# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, ... }:

{
  imports =
    [ <nixpkgs/nixos/modules/installer/scan/not-detected.nix>
    ];

  hardware.bluetooth = {
    enable = true;
  };
  hardware.nvidia.prime = {
    # offload.enable = false;
    sync.enable = true;
    intelBusId = "PCI:0:2:0";
    nvidiaBusId = "PCI:1:0:0";
  };
  hardware.nvidia.powerManagement.enable = true;
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  # boot.kernelModules = [ "coretemp" ];
  # powerManagement.powertop.enable = true;
  services.thermald.enable = true;
  # environment.etc."sysconfig/lm_sensors".text = ''
  #   # Generated by sensors-detect on Tue Aug  7 10:54:09 2018
  #   # This file is sourced by /etc/init.d/lm_sensors and defines the modules to
  #   # be loaded/unloaded.
  #   #
  #   # The format of this file is a shell script that simply defines variables:
  #   # HWMON_MODULES for hardware monitoring driver modules, and optionally
  #   # BUS_MODULES for any required bus driver module (for example for I2C or SPI).
  #   HWMON_MODULES="coretemp"
  #   '';
  boot.extraModulePackages = [ ];
  # hardware.cpu.intel.updateMicrocode = true;
  # hardware.enableAllFirmware = true;
  services.tlp = {
    enable = true;
    settings = {
      CPU_SCALING_GOVERNOR_ON_AC = "performance";
      CPU_SCALING_GOVERNOR_ON_BAT = "powersave";
    };
  };
  # powerManagement.cpuFreqGovernor = lib.mkDefault "performance";


  fileSystems."/" =
    { device = "/dev/mapper/cryptmain";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."cryptmain".device = "/dev/disk/by-partlabel/main";
  boot.initrd.luks.devices."cryptswap".device = "/dev/disk/by-partlabel/swap";

  fileSystems."/boot" =
    { device = "/dev/disk/by-partlabel/ESP";
      fsType = "vfat";
    };
  fileSystems."/tmp" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  swapDevices =
    [ { device = "/dev/mapper/cryptswap"; }
    ];

  nix.maxJobs = lib.mkDefault 8;
  # services.tlp.enable = true;
}
